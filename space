import pygame

pygame.init()
pygame.display.set_caption("space invaders!")
screen = pygame.display.set_mode((1200, 800))
clock = pygame.time.Clock()
gameover = False

#player varibles   
xpos = 400
ypos = 750
moveLeft = False
moveRight = False
timer = 0;
shoot = False  

class Alien:
    def __init__(self, xpos, ypos):
        self.xpos = xpos
        self.ypos = ypos
        self.isAlive = True
        self.direction = 1
    def draw(self):
        pygame.draw.rect(screen, (250, 250, 250), (self.xpos, self.ypos, 40, 40))
        
    def move(self,time):
        if timer % 800==0:
            self.ypos += 100
            self.direction *=-1
            return 0
        
        if time % 100 == 0:
            self.xpos+=50*self.direction
            
        return time
    def collied(self, BulletX, BulletY):
        if self.isAlive:
            if BulletX > self.xpos:
                if BulletX < self.xpos + 40:
                    if BulletY <self. ypos + 40:
                        if BulletY > self. ypos:
                            print("HIT!")
                            self.isAlive = False
                            return False
                    
        return True 
        
class Bullet:
    def __init__(self, xpos, ypos):
        self.xpos = xpos
        self.ypos = ypos
        self.isAlive = False
        
    def move (self, xpos , ypos):
        if self .isAlive == True:
            self.ypos -=5
        if self.ypos < 0:
            self.isAlive = False
            self.xpos = xpos
            self.ypos = ypos
    def draw(self):
        pygame.draw.rect(screen, (250, 250, 250), (self.xpos, self.ypos, 3, 20))
bullet = Bullet(xpos+28, ypos)
        
            
 




armada = []
for i in range (4):
    for j in range (9):
        armada.append(Alien(j*80+60, i*80+40))

    
walls = []
for k in range (4):
    for i in range (2):
        for j in range (3):
            walls.append(walls(j*3+200*k+50, i*30+300))    

while not gameover:#Game loop#########################################################################################
    clock.tick(60)#FPS
    timer += 1
    print("timer is", timer)
    #input section-------------------------------------------------------------------
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            gameover = True
        
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_LEFT:
                moveLeft = True
                print("pressing left button")
            elif event.key == pygame.K_RIGHT:
                moveRight = True
                print("pressing right button")
            if event.key == pygame.K_SPACE:
                shoot = True
                print("you are firing")
            
        elif event.type == pygame.KEYUP:
            if event.key == pygame.K_LEFT:
                moveLeft = False
            elif event.key == pygame.K_RIGHT:
                moveRight = False
            if event.key == pygame.K_SPACE:
                shoot = False 
        
    #physics section---------------------------------------------------------------------------
    
    if moveLeft == True:
        vx =- 3
    elif moveRight == True:
        vx = 3
    else:
        vx = 0
    
    xpos += vx
    
    for i in range (len(armada)):
        timer = armada[i].move(timer)
    for i in range (len(armada)):
        armada[i].draw()
    
    if shoot == True:
        bullet.isAlive = True
        
    if bullet.isAlive == True:
        bullet.move(xpos+28,ypos)
        if bullet.isAlive == True:
            for i in range (len(armada)):
                bullet.isAlive = armada[i].collied(bullet.xpos, bullet.ypos)
                if bullet.isAlive == False:
                    break
        
    else:
        bullet.xpos = xpos + 28
        bullet.ypos = ypos    
    
    
    #RENDER Section-----------------------------------------------------------------------------
    
    screen.fill((0,0,0))
    
    pygame.draw.rect(screen, (200, 200, 100, ), (xpos, 750, 60, 20)) #starts at 400
    pygame.draw.rect(screen, (200, 200, 100, ), (xpos + 10, 745, 40, 25))
    pygame.draw.rect(screen, (200, 200, 100, ), (xpos + 25, 740, 10, 15))
    pygame.draw.rect(screen, (200, 200, 100, ), (xpos + 27.5, 735, 5, 5))
    
    
    bullet.draw()
    
    for i in range (len(armada)):
        armada[i].draw()
    
    
    for k in range (len(walls)):
        walls[k].draw()
    
    
    pygame.display.flip()
    
    


    
#end of game loop#########################################################################################
pygame.quit()
